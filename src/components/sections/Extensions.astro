---
import type { CV } from "@cv";
import { basics } from "@cv";
import Icon from "@/components/Icon.astro";
import Section from '../Section.astro';

interface Props {
  className?: string;
}

interface Highlight {
  text: string;
}

const { extensions } = basics;
---

<Section title="Extensions" className={Astro.props.className}>
  <div class="space-y-4">
    {extensions && extensions.map((extension) => (
      <div class="rounded-lg border border-skin-line bg-skin-card p-4">
        <div class="flex items-center gap-2">
          <Icon name={extension.stack[Object.keys(extension.stack)[0]]} class="h-6 w-6" />
          <h3 class="text-xl font-semibold">{extension.name}</h3>
        </div>
        <p class="mt-2 text-skin-muted">{extension.description}</p>
        {extension.highlights && (
          <ul class="mt-2 list-disc list-inside space-y-1">
            {extension.highlights.map((highlight: string) => (
              <li class="text-skin-muted">{highlight}</li>
            ))}
          </ul>
        )}
        {extension.stack && (
          <div class="mt-4">
            <h5 class="text-sm font-medium">Tech Stack:</h5>
            <div class="mt-2 flex flex-wrap gap-2">
              {Object.entries(extension.stack).map(([name, icon]) => (
                <div class="flex items-center gap-1 rounded bg-skin-card px-2 py-1 text-sm">
                  <Icon name={icon} class="h-4 w-4" />
                  <span>{name}</span>
                </div>
              ))}
            </div>
          </div>
        )}
        {extension.url && (
          <a href={extension.url} target="_blank" rel="noopener noreferrer" class="mt-4 inline-flex items-center gap-1 text-sm text-skin-hue hover:underline">
            View Extension
            <Icon name="ri:arrow-right-line" class="h-5 w-5" />
          </a>
        )}
      </div>
    ))}
  </div>
</Section> 